# This is a basic workflow that is manually triggered

name: Manual workflow multiple jobs

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      wazuh-manager-image: 
        description: 'Wazuh Manager Image'
        default: 'wazuh_manager_filebeat_sources_cmake'
        required: true
      wazuh-agent-image: 
        description: 'Wazuh Agent Image'
        default: 'wazuh_agent_ubuntu_sources_cmake'
        required: true
      wazuh-version:
        description: 'Wazuh Version'
        default: 'v4.3.1'
        required: true
      elastic-version: 
        description: 'Elastic Version'
        default: '7.16.3'
        required: true
      filebeat-wazuh-template-url: 
        description: 'filebeat Wazuh Template URL'
        default: 'https://raw.githubusercontent.com/wazuh/wazuh/4.0/extensions/elasticsearch/7.x/wazuh-template.json'
        required: true
      filebeat-wazuh-module-url:
        description: 'filebeat Wazuh Module URL'
        default: 'https://packages.wazuh.com/4.x/filebeat/wazuh-filebeat-0.1.tar.gz'
        required: true                
      wazuh-app-branch-version: 
        description: 'Wazuh Kiabana App Branch/Tag'
        default: ''
        required: true  
        

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # job_1:
  #   name: 'Build Wazuh app package'
  #   runs-on: ubuntu-18.04
  #   steps:
  #    - name: Step 01 - Download Project wazuh-packages 
  #      uses: actions/checkout@v2
  #      with:
  #       repository: wazuh/wazuh-packages
  #       ref: 'master'
  #       path: wazuh-packages
  #    - name: Step 02 - Building package
  #      run: |
  #       mkdir -p $GITHUB_WORKSPACE/packages
  #       cd $GITHUB_WORKSPACE/wazuh-packages/wazuhapp/kibana
  #       echo fixing command...
  #       sed -i -e 's/'\|' cut -d \"\/\" \-f2//g' ./generate_wazuh_app.sh 
  #       echo run command...
  #       ./generate_wazuh_app.sh -b ${{ github.event.inputs.wazuh-app-branch-version }} -s $GITHUB_WORKSPACE/packages -r 1
  #    - name: Step 03 - Upload package
  #      uses: actions/upload-artifact@v3
  #      with:
  #         name: wazuh-kibana-app
  #         path: ${{ github.workspace }}/packages/*
  
  job_2:
    name: 'Build Image Wazuh Manager'
    runs-on: ubuntu-18.04
    steps:
     - name: Step 01 - Download Project wazuh-app-environments 
       uses: actions/checkout@v2
       with:
        repository: matiasmoreno876/wazuh-app-environments
        ref: 'master'
        path: wazuh-app-environments
        token: ${{ secrets.FE_SECRET_TOKEN }}
     - name: Set up Docker Buildx
       uses: docker/setup-buildx-action@v1
     - name: Build and push
       uses: docker/build-push-action@v2
       with:
        context: ${{ github.workspace }}/wazuh-app-environments/images/${{ github.event.inputs.wazuh-manager-image }}
        build-args: WAZUH_VERSION=${{ github.event.inputs.wazuh-version }},FILEBEAT_VERSION=${{ github.event.inputs.elastic-version }},FILEBEAT_WAZUH_TEMPLATE_URL=${{ github.event.inputs.filebeat-wazuh-template-url }},FILEBEAT_WAZUH_MODULE_URL=${{ github.event.inputs.filebeat-wazuh-module-url }}
        tags: ${{ github.event.inputs.wazuh-manager-image }}:${{ github.event.inputs.wazuh-version }}-${{ github.event.inputs.elastic-version }}
        outputs: type=docker,dest=/tmp/wazuh-manager-image.tar
     - name: Upload artifact
       uses: actions/upload-artifact@v2
       with:
        name: wazuh-manager-image
        path: /tmp/wazuh-manager-image.tar

  job_3:
    name: 'Build Image Wazuh Agent'
    runs-on: ubuntu-18.04
    steps:
     - name: Step 01 - Download Project wazuh-app-environments 
       uses: actions/checkout@v2
       with:
        repository: matiasmoreno876/wazuh-app-environments
        ref: 'master'
        path: wazuh-app-environments
        token: ${{ secrets.FE_SECRET_TOKEN }}
     - name: Set up Docker Buildx
       uses: docker/setup-buildx-action@v1
     - name: Build and push
       uses: docker/build-push-action@v2
       with:
        context: ${{ github.workspace }}/wazuh-app-environments/images/${{ github.event.inputs.wazuh-agent-image }}
        build-args: WAZUH_VERSION=${{ github.event.inputs.wazuh-version }}
        tags: ${{ github.event.inputs.wazuh-agent-image }}:${{ github.event.inputs.wazuh-version}}
        outputs: type=docker,dest=/tmp/wazuh-agent-image.tar
     - name: Upload artifact
       uses: actions/upload-artifact@v2
       with:
        name: wazuh-agent-image
        path: /tmp/wazuh-agent-image.tar

  job_4:
    name: 'Build Image Wazuh QA'
    runs-on: ubuntu-18.04
    steps:
     - name: Step 01 - Download Project wazuh-app-environments 
       uses: actions/checkout@v2
       with:
        repository: matiasmoreno876/wazuh-app-environments
        ref: 'master'
        path: wazuh-app-environments
        token: ${{ secrets.FE_SECRET_TOKEN }}
     - name: Set up Docker Buildx
       uses: docker/setup-buildx-action@v1
     - name: Build and push
       uses: docker/build-push-action@v2
       with:
        context: ${{ github.workspace }}/wazuh-app-environments/images/ubuntu-cypress
        tags: ubuntu-cypress:1.0.0
        outputs: type=docker,dest=/tmp/ubuntu-cypress-image.tar
     - name: Upload artifact
       uses: actions/upload-artifact@v2
       with:
        name: ubuntu-cypress-image
        path: /tmp/ubuntu-cypress-image.tar

  job_5:
    name: 'Run Wazuh QA'
    runs-on: ubuntu-18.04
    needs:
     - job_1
     - job_3
     - job_4
    steps:
     - name: Step 01 - Download Project wazuh-app-environments 
       uses: actions/checkout@v2
       with:
        repository: matiasmoreno876/wazuh-app-environments
        ref: 'master'
        path: wazuh-app-environments
        token: ${{ secrets.FE_SECRET_TOKEN }}
     - name: Set up Docker Buildx
       uses: docker/setup-buildx-action@v1
    #  - name: Download wazuh-kibana-app
    #    uses: actions/download-artifact@v2
    #    with:
    #     name: wazuh-kibana-app
    #     path: /tmp
     - name: Download wazuh-agent-image
       uses: actions/download-artifact@v2
       with:
        name: wazuh-agent-image
        path: /tmp
     - name: Download ubuntu-cypress-image
       uses: actions/download-artifact@v2
       with:
        name: ubuntu-cypress-image
        path: /tmp        
     - name: Load Docker image
       run: |
          ls -ls /tmp/
          docker load --input /tmp/wazuh-kibana-app.tar
          docker load --input /tmp/wazuh-agent-image.tar
          docker load --input /tmp/ubuntu-cypress-image.tar
          docker image ls -a

  # job_x:
  #   name: Run setup environment wazuh kibana app
  #   #runs-on: self-hosted
  #   runs-on: ubuntu-18.04
  #   #container: cypress/browsers:node12.18.0-chrome83-ff77
  #   steps:
  #    - name: Step 01 - Set up environment variables
  #      run: |
  #       echo "PATH_TEMPLATE_XPACK_CLUSTER_AGENT=$GITHUB_WORKSPACE/wazuh-app-environments/templates_elastic_prod/es_xpack-wz_cluster-agent/" >> $GITHUB_ENV
  #    - name: Step 04 - Starting containers
  #      run: |
  #       cd ${{ env.PATH_TEMPLATE_XPACK_CLUSTER_AGENT }}
  #       sudo sh setup.sh 
  #    - name: Step 07 - Installing package
  #      run: |
  #       cd $GITHUB_WORKSPACE/wazuh-app-environments/packages/
  #       PACKAGE_NAME=`ls *.zip`
  #       cd ${{ env.PATH_TEMPLATE_XPACK_CLUSTER_AGENT }}
  #       docker-compose exec kibana bin/kibana-plugin install file:///packages/$PACKAGE_NAME
  #       docker-compose exec kibana pwd
  #       docker-compose exec kibana ls -la /usr/share/kibana/
  #       docker-compose exec kibana ls -la /usr/share/kibana/data/
  #       docker-compose restart kibana
  #       echo CONTINUES AFTER 60 SECONDS ...
  #       sleep 60s
  #       docker-compose ps
  #       docker-compose exec kibana pwd
  #       docker-compose exec kibana cat data/wazuh/config/wazuh.yml
  #       docker-compose exec kibana sed -i -e "s/url: https:\/\/localhost/url: https:\/\/wazuh-manager-master/g" /usr/share/kibana/data/wazuh/config/wazuh.yml
  #       docker-compose exec kibana cat data/wazuh/config/wazuh.yml
  #   # - name: Step 08 - Configuring ip container into wazuh.yml
  #   #   run: |
  #   #    cd ${{ env.PATH_TEMPLATE_XPACK_CLUSTER_AGENT }}
  #   #    docker exec es_xpack-wz_cluster-agent_kibana_1 pwd
  #   #    docker exec es_xpack-wz_cluster-agent_kibana_1 cat data/wazuh/config/wazuh.yml
  #   #    docker exec es_xpack-wz_cluster-agent_kibana_1 sed -i -e "s/url: https:\/\/localhost/url: https:\/\/wazuh-manager-master/g" /usr/share/kibana/data/wazuh/config/wazuh.yml
  #   #    docker exec es_xpack-wz_cluster-agent_kibana_1 cat data/wazuh/config/wazuh.yml
  #    - name: Step 11 - Run Cypress tests
  #      run: |
  #        cd $GITHUB_WORKSPACE/wazuh-cypress
  #        npm run cypress:run-headless         
  #      continue-on-error: true 
  #    - name: Step 12 - Run Cypress reports
  #      run: |
  #        cd $GITHUB_WORKSPACE/wazuh-cypress
  #        npm run cypress:report        
  #    - name: Step 13 - Archive reports
  #      uses: actions/upload-artifact@v2
  #      with:
  #       name: cypress-reports
  #       path: ${{ github.workspace }}/wazuh-cypress/cypress/report/*
  #    #- name: Step 12 - Upload Screenshots And Videos To Slack
  #     # if: failure()
  #      #uses: trymbill/cypress-slack-video-upload-action@v1.3.0
  #      #with:
  #       #workdir: wazuh-qa/tests/frontend/test_kibana_app/cypress
  #       #token: ${{ secrets.ACTIONS_SLACK_TOKEN }}
  #       #channels: 'daily-app-team'
  #       #message-text: ${{ format('Workflow "{0}" job test triggered by {1} is FAILED for {2} - {3}', github.workflow, github.event_name, github.base_ref, github.head_ref) }}