# This is a basic workflow that is manually triggered

name: Manual workflow

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      wazuh-manager-image: 
        description: 'Wazuh Manager Image'
        default: 'wazuh_manager_filebeat_sources_cmake'
        required: true
      wazuh-agent-image: 
        description: 'Wazuh Agent Image'
        default: 'wazuh_agent_ubuntu_sources_cmake'
        required: true
      wazuh-version:
        description: 'Wazuh Version'
        default: 'v4.3.1'
        required: true
      elastic-version: 
        description: 'Elastic Version'
        default: '7.16.3'
        required: true
      wazuh-app-branch-version: 
        description: 'Wazuh Kiabana App Branch/Tag'
        default: ''
        required: true  
        

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  setup-wazuh-kibana-app:
    name: Run setup environment wazuh kibana app
    #runs-on: self-hosted
    runs-on: ubuntu-18.04
    #container: cypress/browsers:node12.18.0-chrome83-ff77
    steps:
     - name: Step 01 - Set up environment variables
       run: |
        echo Base Branch: ${{ github.base_ref }}
        echo Head Branch: ${{ github.head_ref }}
        echo "WAZUH_HEAD_BRANCH=${{ github.head_ref }}" >> $GITHUB_ENV
        echo "PATH_TEMPLATE_XPACK_CLUSTER_AGENT=$GITHUB_WORKSPACE/wazuh-app-environments/templates_elastic_prod/es_xpack-wz_cluster-agent/" >> $GITHUB_ENV
     - name: Step 02 - Download Project wazuh-app-environments 
       uses: actions/checkout@v2
       with:
        repository: matiasmoreno876/wazuh-app-environments
        ref: 'master'
        path: wazuh-app-environments
        token: ${{ secrets.FE_SECRET_TOKEN }}
     - name: Step 03 - Configuring templates docker environment
       run: |
        cd $GITHUB_WORKSPACE/wazuh-app-environments/
        mkdir packages
        cd ${{ env.PATH_TEMPLATE_XPACK_CLUSTER_AGENT }}
        cat ./.env
        sed -i -e 's|WAZUH_MANAGER_IMAGE=.*|WAZUH_MANAGER_IMAGE=${{ github.event.inputs.wazuh-manager-image }}|g' ./.env
        sed -i -e 's|WAZUH_AGENT_IMAGE=.*|WAZUH_AGENT_IMAGE=${{ github.event.inputs.wazuh-agent-image }}|g' ./.env
        sed -i -e 's|WAZUH_VERSION=.*|WAZUH_VERSION=${{ github.event.inputs.wazuh-version }}|g' ./.env
        sed -i -e 's|ELASTIC_VERSION=.*|ELASTIC_VERSION=${{ github.event.inputs.elastic-version }}|g' ./.env
        cat .env
     - name: Step 04 - Starting containers
       run: |
        cd ${{ env.PATH_TEMPLATE_XPACK_CLUSTER_AGENT }}
        sudo sh setup.sh 
     - name: Step 05 - Download Project wazuh-packages 
       uses: actions/checkout@v2
       with:
        repository: wazuh/wazuh-packages
        ref: 'master'
        path: wazuh-packages
     - name: Step 06 - Building package
       run: |
        cd $GITHUB_WORKSPACE/wazuh-packages/wazuhapp/kibana
        pwd
        ls -la
        echo fixing command...
        sed -i -e 's/'\|' cut -d \"\/\" \-f2//g' ./generate_wazuh_app.sh 
        echo run command...
        ./generate_wazuh_app.sh -b ${{ github.event.inputs.wazuh-app-branch-version }} -s $GITHUB_WORKSPACE/wazuh-app-environments/packages -r 1
     - name: Step 07 - Installing package
       run: |
        cd $GITHUB_WORKSPACE/wazuh-app-environments/packages/
        PACKAGE_NAME=`ls *.zip`
        cd ${{ env.PATH_TEMPLATE_XPACK_CLUSTER_AGENT }}
        docker-compose kibana bin/kibana-plugin install file:///packages/$PACKAGE_NAME
        docker-compose kibana pwd
        docker-compose kibana ls -la /usr/share/kibana/
        docker-compose kibana ls -la /usr/share/kibana/data/
        docker-compose restart kibana
        echo CONTINUES AFTER 60 SECONDS ...
        sleep 60s
        docker-compose ps
        docker-compose kibana pwd
        docker-compose kibana cat data/wazuh/config/wazuh.yml
        docker-compose kibana sed -i -e "s/url: https:\/\/localhost/url: https:\/\/wazuh-manager-master/g" /usr/share/kibana/data/wazuh/config/wazuh.yml
        docker-compose kibana cat data/wazuh/config/wazuh.yml
    # - name: Step 08 - Configuring ip container into wazuh.yml
    #   run: |
    #    cd ${{ env.PATH_TEMPLATE_XPACK_CLUSTER_AGENT }}
    #    docker exec es_xpack-wz_cluster-agent_kibana_1 pwd
    #    docker exec es_xpack-wz_cluster-agent_kibana_1 cat data/wazuh/config/wazuh.yml
    #    docker exec es_xpack-wz_cluster-agent_kibana_1 sed -i -e "s/url: https:\/\/localhost/url: https:\/\/wazuh-manager-master/g" /usr/share/kibana/data/wazuh/config/wazuh.yml
    #    docker exec es_xpack-wz_cluster-agent_kibana_1 cat data/wazuh/config/wazuh.yml
     - name: Step 09 - Download Project wazuh-qa 
       uses: actions/checkout@v2
       with:
        ref: 'main'
        path: wazuh-cypress
     - name: Step 10 - Install Cypress Project Dependencies
       run: |
        cd $GITHUB_WORKSPACE/wazuh-cypress
        npm install
      # npm run cy:install
     - name: Step 11 - Run Cypress tests
       run: |
         cd $GITHUB_WORKSPACE/wazuh-cypress
         npm run cypress:run-headless         
       continue-on-error: true 
     - name: Step 12 - Run Cypress reports
       run: |
         cd $GITHUB_WORKSPACE/wazuh-cypress
         npm run cypress:report        
     - name: Step 13 - Archive reports
       uses: actions/upload-artifact@v2
       with:
        name: cypress-reports
        path: ${{ github.workspace }}/wazuh-cypress/cypress/report/*
     #- name: Step 12 - Upload Screenshots And Videos To Slack
      # if: failure()
       #uses: trymbill/cypress-slack-video-upload-action@v1.3.0
       #with:
        #workdir: wazuh-qa/tests/frontend/test_kibana_app/cypress
        #token: ${{ secrets.ACTIONS_SLACK_TOKEN }}
        #channels: 'daily-app-team'
        #message-text: ${{ format('Workflow "{0}" job test triggered by {1} is FAILED for {2} - {3}', github.workflow, github.event_name, github.base_ref, github.head_ref) }}